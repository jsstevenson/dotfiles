env:
    TERM_PROGRAM: 'alacritty'

scrolling:
  history: 10000
  multiplier: 3

font:
  normal:
    family: 'Fira Code'
    style: Regular
  bold:
    family: 'Fira Code'
    style: Bold
  size: 12

  #offset:
  #  x: 0
  #  y: 0
  # Thin stroke font rendering (macOS only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`
  # macOS >= 10.14.x:
  # If the font quality on non-retina display looks bad then set
  # `use_thin_strokes` to `true` and enable font smoothing by running the
  # following command:
  #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
  # This is a global setting and will require a log out or restart to take
  # effect.
  use_thin_strokes: true

# If `true`, bold text is drawn using the bright color variants.
#draw_bold_text_with_bright_colors: false

#selection:
  #semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  #save_to_clipboard: false

#cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  #style: Block

  # Vi mode cursor style
  #
  # If the vi mode cursor style is `None` or not specified, it will fall back to
  # the style of the active value of the normal cursor.
  #
  # See `cursor.style` for available options.
  #vi_mode_style: None

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  #unfocused_hollow: true

  # Thickness of the cursor relative to the cell width as floating point number
  # from `0.0` to `1.0`.
  #thickness: 0.15

shell:
  program: /bin/zsh
  args:
    - --login

# Mouse bindings
#
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
#
# To trigger mouse bindings when an application running within Alacritty captures the mouse, the
# `Shift` modifier is automatically added as a requirement.
#
# Each mouse binding will specify a:
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings)
#
# And optionally:
#
# - `mods` (see key bindings)
#mouse_bindings:
#  - { mouse: Middle, action: PasteSelection }

# Key bindings
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
# Then exactly one of:
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `action`: Execute a predefined action
#
#   - ToggleViMode
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Minimize
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - ClearSelection
#   - ReceiveChar
#   - None
#
#   (`mode: Vi` only):
#   - Open
#   - Up
#   - Down
#   - Left
#   - Right
#   - First
#   - Last
#   - FirstOccupied
#   - High
#   - Middle
#   - Low
#   - SemanticLeft
#   - SemanticRight
#   - SemanticLeftEnd
#   - SemanticRightEnd
#   - WordRight
#   - WordLeft
#   - WordRightEnd
#   - WordLeftEnd
#   - Bracket
#   - ToggleNormalSelection
#   - ToggleLineSelection
#   - ToggleBlockSelection
#   - ToggleSemanticSelection
#
#   (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
#   (Linux/BSD only):
#   - CopySelection: Copies into selection buffer
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
#
# If the same trigger is assigned to multiple actions, all of them are executed
# at once.

key_bindings:
  #- { key: Paste,                                action: Paste          }
  #- { key: Copy,                                 action: Copy           }
  #- { key: L,         mods: Control,             action: ClearLogNotice }
  #- { key: L,         mods: Control, mode: ~Vi,  chars: "\x0c"          }
  #- { key: PageUp,    mods: Shift,   mode: ~Alt, action: ScrollPageUp,  }
  #- { key: PageDown,  mods: Shift,   mode: ~Alt, action: ScrollPageDown }
  #- { key: Home,      mods: Shift,   mode: ~Alt, action: ScrollToTop,   }
  #- { key: End,       mods: Shift,   mode: ~Alt, action: ScrollToBottom }

  # Vi Mode
  #- { key: Space,  mods: Shift|Control, mode: Vi, action: ScrollToBottom          }
  #- { key: Space,  mods: Shift|Control,           action: ToggleViMode            }
  #- { key: Escape,                      mode: Vi, action: ClearSelection          }
  #- { key: I,                           mode: Vi, action: ScrollToBottom          }
  #- { key: I,                           mode: Vi, action: ToggleViMode            }
  #- { key: Y,      mods: Control,       mode: Vi, action: ScrollLineUp            }
  #- { key: E,      mods: Control,       mode: Vi, action: ScrollLineDown          }
  #- { key: G,                           mode: Vi, action: ScrollToTop             }
  #- { key: G,      mods: Shift,         mode: Vi, action: ScrollToBottom          }
  #- { key: B,      mods: Control,       mode: Vi, action: ScrollPageUp            }
  #- { key: F,      mods: Control,       mode: Vi, action: ScrollPageDown          }
  #- { key: U,      mods: Control,       mode: Vi, action: ScrollHalfPageUp        }
  #- { key: D,      mods: Control,       mode: Vi, action: ScrollHalfPageDown      }
  #- { key: Y,                           mode: Vi, action: Copy                    }
  #- { key: Y,                           mode: Vi, action: ClearSelection          }
  #- { key: Copy,                        mode: Vi, action: ClearSelection          }
  #- { key: V,                           mode: Vi, action: ToggleNormalSelection   }
  #- { key: V,      mods: Shift,         mode: Vi, action: ToggleLineSelection     }
  #- { key: V,      mods: Control,       mode: Vi, action: ToggleBlockSelection    }
  #- { key: V,      mods: Alt,           mode: Vi, action: ToggleSemanticSelection }
  #- { key: Return,                      mode: Vi, action: Open                    }
  #- { key: K,                           mode: Vi, action: Up                      }
  #- { key: J,                           mode: Vi, action: Down                    }
  #- { key: H,                           mode: Vi, action: Left                    }
  #- { key: L,                           mode: Vi, action: Right                   }
  #- { key: Up,                          mode: Vi, action: Up                      }
  #- { key: Down,                        mode: Vi, action: Down                    }
  #- { key: Left,                        mode: Vi, action: Left                    }
  #- { key: Right,                       mode: Vi, action: Right                   }
  #- { key: Key0,                        mode: Vi, action: First                   }
  #- { key: Key4,   mods: Shift,         mode: Vi, action: Last                    }
  #- { key: Key6,   mods: Shift,         mode: Vi, action: FirstOccupied           }
  #- { key: H,      mods: Shift,         mode: Vi, action: High                    }
  #- { key: M,      mods: Shift,         mode: Vi, action: Middle                  }
  #- { key: L,      mods: Shift,         mode: Vi, action: Low                     }
  #- { key: B,                           mode: Vi, action: SemanticLeft            }
  #- { key: W,                           mode: Vi, action: SemanticRight           }
  #- { key: E,                           mode: Vi, action: SemanticRightEnd        }
  #- { key: B,      mods: Shift,         mode: Vi, action: WordLeft                }
  #- { key: W,      mods: Shift,         mode: Vi, action: WordRight               }
  #- { key: E,      mods: Shift,         mode: Vi, action: WordRightEnd            }
  #- { key: Key5,   mods: Shift,         mode: Vi, action: Bracket                 }

  # (Windows, Linux, and BSD only)
  #- { key: V,        mods: Control|Shift,           action: Paste            }
  #- { key: C,        mods: Control|Shift,           action: Copy             }
  #- { key: C,        mods: Control|Shift, mode: Vi, action: ClearSelection   }
  #- { key: Insert,   mods: Shift,                   action: PasteSelection   }
  #- { key: Key0,     mods: Control,                 action: ResetFontSize    }
  #- { key: Equals,   mods: Control,                 action: IncreaseFontSize }
  #- { key: Add,      mods: Control,                 action: IncreaseFontSize }
  #- { key: Subtract, mods: Control,                 action: DecreaseFontSize }
  #- { key: Minus,    mods: Control,                 action: DecreaseFontSize }

  # (macOS only)
  #- { key: K,      mods: Command, mode: ~Vi, chars: "\x0c"            }
  - { key: Key0,   mods: Command,            action: ResetFontSize    }
  - { key: Equals, mods: Command,            action: IncreaseFontSize }
  #- { key: Add,    mods: Command,            action: IncreaseFontSize }
  - { key: Minus,  mods: Command,            action: DecreaseFontSize }
  #- { key: K,      mods: Command,            action: ClearHistory     }
  #- { key: V,      mods: Command,            action: Paste            }
  #- { key: C,      mods: Command,            action: Copy             }
  #- { key: C,      mods: Command, mode: Vi,  action: ClearSelection   }
  #- { key: H,      mods: Command,            action: Hide             }
  #- { key: M,      mods: Command,            action: Minimize         }
  #- { key: Q,      mods: Command,            action: Quit             }
  - { key: W,      mods: Command,            action: None             }
  #- { key: N,      mods: Command,            action: SpawnNewInstance }
  #- { key: F,      mods: Command|Control,    action: ToggleFullscreen }

# Colors (Tomorrow Night Bright)
schemes:
  solarized_dark: &solarized_dark
    primary:
      background: '#002b36' # base03
      foreground: '#839496' # base0

    # Cursor colors
    cursor:
      text:   '#002b36' # base03
      cursor: '#839496' # base0

    # Normal colors
    normal:
      black:   '#073642' # base02
      red:     '#dc322f' # red
      green:   '#859900' # green
      yellow:  '#b58900' # yellow
      blue:    '#268bd2' # blue
      magenta: '#d33682' # magenta
      cyan:    '#2aa198' # cyan
      white:   '#eee8d5' # base2

    # Bright colors
    bright:
      black:   '#586e75' # base01
      red:     '#cb4b16' # orange
      green:   '#586e75' # base01
      yellow:  '#657b83' # base00
      blue:    '#839496' # base0
      magenta: '#6c71c4' # violet
      cyan:    '#93a1a1' # base1
      white:   '#fdf6e3' # base3

  solarized_light: &solarized_light
    # Default colors
    primary:
      background: '#fdf6e3' # base3
      foreground: '#657b83' # base00

    # Cursor colors
    cursor:
      text:   '#fdf6e3' # base3
      cursor: '#657b83' # base00

    # Normal colors
    normal:
      black:   '#073642' # base02
      red:     '#dc322f' # red
      green:   '#859900' # green
      yellow:  '#b58900' # yellow
      blue:    '#268bd2' # blue
      magenta: '#d33682' # magenta
      cyan:    '#2aa198' # cyan
      white:   '#eee8d5' # base2

    # Bright colors
    bright:
      black:   '#002b36' # base03
      red:     '#cb4b16' # orange
      green:   '#586e75' # base01
      yellow:  '#657b83' # base00
      blue:    '#839496' # base0
      magenta: '#6c71c4' # violet
      cyan:    '#93a1a1' # base1
      white:   '#fdf6e3' # base3


    gruvbox_light: &gruvbox_light
      # Default colors
      primary:
        # hard contrast: background = '#f9f5d7'
        background: '#fbf1c7'
        # soft contrast: background = '#f2e5bc'
        foreground: '#3c3836'

      # Normal colors
      normal:
        black:   '#fbf1c7'
        red:     '#cc241d'
        green:   '#98971a'
        yellow:  '#d79921'
        blue:    '#458588'
        magenta: '#b16286'
        cyan:    '#689d6a'
        white:   '#7c6f64'

      # Bright colors
      bright:
        black:   '#928374'
        red:     '#9d0006'
        green:   '#79740e'
        yellow:  '#b57614'
        blue:    '#076678'
        magenta: '#8f3f71'
        cyan:    '#427b58'
        white:   '#3c3836'

    gruvbox_dark: &gruvbox_dark
      # Default colors
      primary:
        # hard contrast: background = '#1d2021'
        background: '#282828'
        # soft contrast: background = '#32302f'
        foreground: '#ebdbb2'

      # Normal colors
      normal:
        black:   '#282828'
        red:     '#cc241d'
        green:   '#98971a'
        yellow:  '#d79921'
        blue:    '#458588'
        magenta: '#b16286'
        cyan:    '#689d6a'
        white:   '#a89984'

      # Bright colors
      bright:
        black:   '#928374'
        red:     '#fb4934'
        green:   '#b8bb26'
        yellow:  '#fabd2f'
        blue:    '#83a598'
        magenta: '#d3869b'
        cyan:    '#8ec07c'
        white:   '#ebdbb2'

  tokyo_night_light: &tokyo_light
    # Default colors
    primary:
      background: '#d5d6db' # base3
      foreground: '#0f0f14' # base00

    # Cursor colors
    cursor:
      text:   '#d5d6db' # base3
      cursor: '#0f0f14' # base00

    # Normal colors
    normal:
      black:   '#073642' # base02
      red:     '#dc322f' # red
      green:   '#859900' # green
      yellow:  '#b58900' # yellow
      blue:    '#268bd2' # blue
      magenta: '#d33682' # magenta
      cyan:    '#2aa198' # cyan
      white:   '#eee8d5' # base2

    # Bright colors
    bright:
      black:   '#002b36' # base03
      red:     '#cb4b16' # orange
      green:   '#586e75' # base01
      yellow:  '#657b83' # base00
      blue:    '#839496' # base0
      magenta: '#6c71c4' # violet
      cyan:    '#93a1a1' # base1
      white:   '#fdf6e3' # base3

  tokyo_night: &tokyo_night
    # Default colors
    primary:
      background: '0x1a1b26'
      foreground: '0xc0caf5'

    # Normal colors
    normal:
      black:   '0x15161E'
      red:     '0xf7768e'
      green:   '0x9ece6a'
      yellow:  '0xe0af68'
      blue:    '0x7aa2f7'
      magenta: '0xbb9af7'
      cyan:    '0x7dcfff'
      white:   '0xa9b1d6'

    # Bright colors
    bright:
      black:   '0x15161E'
      red:     '0xf7768e'
      green:   '0x9ece6a'
      yellow:  '0xe0af68'
      blue:    '0x7aa2f7'
      magenta: '0xbb9af7'
      cyan:    '0x7dcfff'
      white:   '0xc0caf5'

    indexed_colors:
      - { index: 16, color: '0xff9e64' }
      - { index: 17, color: '0xdb4b4b' }

  tokyo_storm: &tokyo_storm
    # Default colors
    primary:
      background: '0x24283b'
      foreground: '0xc0caf5'

    # Normal colors
    normal:
      black:   '0x1D202F'
      red:     '0xf7768e'
      green:   '0x9ece6a'
      yellow:  '0xe0af68'
      blue:    '0x7aa2f7'
      magenta: '0xbb9af7'
      cyan:    '0x7dcfff'
      white:   '0xa9b1d6'

    # Bright colors
    bright:
      black:   '0x1D202F'
      red:     '0xf7768e'
      green:   '0x9ece6a'
      yellow:  '0xe0af68'
      blue:    '0x7aa2f7'
      magenta: '0xbb9af7'
      cyan:    '0x7dcfff'
      white:   '0xc0caf5'

    indexed_colors:
      - { index: 16, color: '0xff9e64' }
      - { index: 17, color: '0xdb4b4b' }

  atom_one_light: &atom_one_light
    primary:
      background: '0xf8f8f8'
      foreground: '0x2a2b33'

    normal:
      black:   '0x000000'
      red:     '0xde3d35'
      green:   '0x3e953a'
      yellow:  '0xd2b67b'
      blue:    '0x2f5af3'
      magenta: '0xa00095'
      cyan:    '0x3e953a'
      white:   '0xbbbbbb'

    bright:
      black:   '0x000000'
      red:     '0xde3d35'
      green:   '0x3e953a'
      yellow:  '0xd2b67b'
      blue:    '0x2f5af3'
      magenta: '0xa00095'
      cyan:    '0x3e953a'
      white:   '0xffffff'

colors: *tokyo_storm
